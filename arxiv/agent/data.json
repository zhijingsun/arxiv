[
    {
        "instruction": "You are an expert dataset URL finder. Find and return dataset URLs from input URL using the following steps: 1. Read the content of the input URL, if the page shows a direct 'download' or 'data' button, return the dataset URL either shown or embedded in the button. 2. if the input url contains 'GitHub': - Look for the dataset location information in the repository's README file. The information could be the dataset URL embedded or shown. It could also be a directory showing how to find the dataset folder from the main github folder. If so, follow the directory path to trace the location of the dataset URL and return the URL. - If the path is not found in the README file, look for the dataset URL in the repository's 'data' or 'dataset' folder or other relevant folders. - If such files exist, check inside the file to find whether there are URLs or files containing datasets and return the dataset URL. - if there are more than one dataset file, return the URL of the folder that contains all datasets. 3. if the input url contains 'Huggingface': Return the URL to the dataset. 4. Other Formats: If the URL contains the word 'json' or 'csv' or other potential formats of datasets at the end of the URL, return the URL directly. 5. Return 'Not Found', if no such dataset URL exists. Solve data extraction task with interleaving Thought, Action, Observation, Return steps reiterating when necessary. Observation analysis the given information, ie. the content of the page. Thought can help judge whether there is such a url or file containing dataset and determine the next action with the given information, and Action can be three types: (1) Search[path], which searches for the location of file containing datasets in the content of current url and returns the path that shows how to locate the dataset file and direct to the following relevant url. (2) Open[url], which follows the thought to open the next URL or folder. Return would only return the complete final dataset URL, do not give the embedded one. Additionally, look for URLs embedded in specific words or phrases such as 'here', 'this link', or 'download'. Make sure to follow any such links to locate the dataset.",
        "input": "https://github.com/bitMyron/sa-swin",
        "output": "https://github.com/bitMyron/sa-swin/tree/main/datasets"
    },
    {
        "instruction": "You are an expert dataset URL finder. Find and return dataset URLs from input URL using the following steps: 1. Read the content of the input URL, if the page shows a direct 'download' or 'data' button, return the dataset URL either shown or embedded in the button. 2. if the input url contains 'GitHub': - Look for the dataset location information in the repository's README file. The information could be the dataset URL embedded or shown. It could also be a directory showing how to find the dataset folder from the main github folder. If so, follow the directory path to trace the location of the dataset URL and return the URL. - If the path is not found in the README file, look for the dataset URL in the repository's 'data' or 'dataset' folder or other relevant folders. - If such files exist, check inside the file to find whether there are URLs or files containing datasets and return the dataset URL. - if there are more than one dataset file, return the URL of the folder that contains all datasets. 3. if the input url contains 'Huggingface': Return the URL to the dataset. 4. Other Formats: If the URL contains the word 'json' or 'csv' or other potential formats of datasets at the end of the URL, return the URL directly. 5. Return 'Not Found', if no such dataset URL exists. Solve data extraction task with interleaving Thought, Action, Observation, Return steps reiterating when necessary. Observation analysis the given information, ie. the content of the page. Thought can help judge whether there is such a url or file containing dataset and determine the next action with the given information, and Action can be three types: (1) Search[path], which searches for the location of file containing datasets in the content of current url and returns the path that shows how to locate the dataset file and direct to the following relevant url. (2) Open[url], which follows the thought to open the next URL or folder. Return would only return the complete final dataset URL, do not give the embedded one. Additionally, look for URLs embedded in specific words or phrases such as 'here', 'this link', or 'download'. Make sure to follow any such links to locate the dataset.",
        "input": "https://github.com/google-research/google-research/tree/master/youtube_sl_25",
        "output": "https://console.cloud.google.com/storage/browser/gresearch/youtube-sl-25;tab=objects?prefix=&forceOnObjectsSortingFiltering=false"
    },
    {
        "instruction": "You are an expert dataset URL finder. Find and return dataset URLs from input URL using the following steps: 1. Read the content of the input URL, if the page shows a direct 'download' or 'data' button, return the dataset URL either shown or embedded in the button. 2. if the input url contains 'GitHub': - Look for the dataset location information in the repository's README file. The information could be the dataset URL embedded or shown. It could also be a directory showing how to find the dataset folder from the main github folder. If so, follow the directory path to trace the location of the dataset URL and return the URL. - If the path is not found in the README file, look for the dataset URL in the repository's 'data' or 'dataset' folder or other relevant folders. - If such files exist, check inside the file to find whether there are URLs or files containing datasets and return the dataset URL. - if there are more than one dataset file, return the URL of the folder that contains all datasets. 3. if the input url contains 'Huggingface': Return the URL to the dataset. 4. Other Formats: If the URL contains the word 'json' or 'csv' or other potential formats of datasets at the end of the URL, return the URL directly. 5. Return 'Not Found', if no such dataset URL exists. Solve data extraction task with interleaving Thought, Action, Observation, Return steps reiterating when necessary. Observation analysis the given information, ie. the content of the page. Thought can help judge whether there is such a url or file containing dataset and determine the next action with the given information, and Action can be three types: (1) Search[path], which searches for the location of file containing datasets in the content of current url and returns the path that shows how to locate the dataset file and direct to the following relevant url. (2) Open[url], which follows the thought to open the next URL or folder. Return would only return the complete final dataset URL, do not give the embedded one. Additionally, look for URLs embedded in specific words or phrases such as 'here', 'this link', or 'download'. Make sure to follow any such links to locate the dataset.",
        "input": "https://github.com/GrokCV/BAFE-Net",
        "output": "https://drive.google.com/uc?export=download&id=1PY0d1WuCjf_3wAIjDSNhYxREVK27OLzl"
    }
]